name: Build and deploy

on:
  push:
    branches:
      - master
      - uat
  pull_request:
    branches:
      - master
      - uat

env:
  GKE_CLUSTER: main
  GKE_ZONE: asia-southeast1-b
  MAVEN_OPTS: "-Dmaven.repo.local=.m2"
  JOB_ORIGINAL_NAME: nimbus-service
  
jobs:
  maven_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup jdk
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: build
        run: |-
          mvn $MAVEN_OPTS clean package

  docker_build:
    runs-on: ubuntu-latest
    needs: maven_build
    steps:
      - uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '286.0.0'
          service_account_email: ${{ secrets.NONPROD_GKE_SA_EMAIL }}
          service_account_key: ${{ secrets.NONPROD_GKE_SA_KEY }}
          project_id: ${{ secrets.NONPROD_GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - name: authorize gcloud
        run: |-
          gcloud --quiet auth configure-docker

      - name: authorize gke
          run: |-
            gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: run cloudbuild
        run: |-
          gcloud builds submit \
          --config=cloudbuild.yml \
          --substitutions=_JOB_NAME=$JOB_ORIGINAL_NAME,_IMAGE_TAG=$GITHUB_SHA,_JOB_ID=${{ secrets.NONPROD_GKE_PROJECT }} \

  deploy_nimbus_internal_to_uat:
    runs-on: ubuntu-latest
    needs: docker_build
    name: deploy nimbus-internal to uat
    env:
      HOST: api-internal-uat.nimbus.com.vn
      ENVIRONMENT: uat
      SERVICE_PATH: /nimbus-internal
      GCP_PROJECT_ID: ${{ secrets.NONPROD_GKE_PROJECT }}
      GKE_CLUSTER_NAME: $GKE_CLUSTER
      GKE_DEPLOYER_KEY: ${{ secrets.NONPROD_GKE_SA_KEY }}
      JOB_NAME: $JOB_ORIGINAL_NAME-api-internal
      ZONE: $GKE_ZONE
    steps:
      - uses: actions/checkout@v2
      - name: run gke deploy
        run: |-
          cd api-internal/deploy/k8s/uat && bash deploy-uat.sh

  run_migration_in_uat:
    runs-on: ubuntu-latest
    needs: docker_build
    name: run migration in uat
    env:
      ENVIRONMENT: uat
      GCP_PROJECT_ID: ${{ secrets.NONPROD_GKE_PROJECT }}
      GKE_CLUSTER_NAME: $GKE_CLUSTER
      GKE_DEPLOYER_KEY: ${{ secrets.NONPROD_GKE_SA_KEY }}
      JOB_NAME: $JOB_ORIGINAL_NAME-migration
      ZONE: $GKE_ZONE
    steps:
      - uses: actions/checkout@v2
      - name: run gke deploy
        run: cd ./common/deploy/k8s/uat && bash deploy-uat.sh